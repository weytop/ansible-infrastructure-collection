# SPDX-FileCopyrightText: 2024 ThysTips <contact@thystips.net>
# SPDX-FileCopyrightText: 2024 Weytop
#
# SPDX-License-Identifier: CC0-1.0
name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.13

defaults:
  run:
    shell: bash
    working-directory: ./ansible_collections/weytop/infrastructure

jobs:
  compliance:
    runs-on: self-hosted
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4

      - id: compliance
        name: REUSE Compliance Check
        uses: fsfe/reuse-action@v5

  lint:
    runs-on: self-hosted
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./ansible_collections/weytop/infrastructure

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "/root/.local/bin" >> $GITHUB_PATH

      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'

      - name: Install the project dependencies
        run: poetry install --with=dev

      # - id: ansible-sanity
      #   name: Test Ansible Collection Sanity
      #   env:
      #     HOME: /root
      #   run: poetry run ansible-test sanity

      - id: ansible-lint
        name: Lint Ansible Collection
        env:
          HOME: /root
        run: poetry run ansible-lint

  build:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: self-hosted
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./ansible_collections/weytop/infrastructure

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "/root/.local/bin" >> $GITHUB_PATH

      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'

      - name: Install the project dependencies
        run: poetry install --without=dev

      - id: dist-clean
        name: Clean dist directory
        run: rm -rf dist || true

      - id: build-collection
        name: Build Ansible Collection
        env:
          HOME: /root
        run: |
          poetry export -f requirements.txt --output requirements.txt
          poetry run ansible-galaxy collection build --force
